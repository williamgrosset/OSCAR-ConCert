<?xml version="1.0" encoding="UTF-8"?>
<indicatorTemplateXML>
	<author>Colcamex Resources Inc. for Oscar EMR</author>
	<uid></uid>
	<heading>
		<category>Preventive Health Care</category>
		<subCategory>Obesity</subCategory>
		<name>Obesity</name>
		<definition>% of population, age 18 and older, who are currently overweight or obese.</definition>
		<framework>Based on and adapted from CIHIâ€™s 2012 Indicator Technical Specifications (Nov 2012)</framework>
		<frameworkVersion>11-01-2012</frameworkVersion>
		<notes></notes>
	</heading>
	<indicatorQuery>
		<version>10-07-2016</version>
		<params>
			<!-- 
				Required parameter provider. Value options are: 
					[ an individual providerNo, or provider range ] ie: value="370, 1001" 
					"all" ie: value="all" including null.
					"loggedInProvider" ie:
				Default is "loggedInProvider"
				Use this parameter in the query as ${provider}
				This parameter should be used for fetching patient's assigned to a MRP.
				ie: WHERE demographic.provider_no = ${provider}
			-->
			<parameter id="provider" name="provider_no" value="loggedInProvider" />
			<parameter id="pstatus" name="Patient Status" value="'%AC%'" />
			<parameter id="bmi" name="BMI" value="'BMI'" />
			<parameter id="height" name="Height" value="'HT'" />		
		</params>
		<range>

			<lowerLimit id="age" label="Min Age" name="Age" value="18" />
			
			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			
			<lowerLimit id="date" label="Pregnancy Episode Date" name="Date36" value="DATE_SUB( NOW(), INTERVAL 9 MONTH )" />
			
			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />
			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />
			
			<upperLimit id="bmi" label="Obese" name="Obese" value="30" />
			<lowerLimit id="bmi" label="Underweight" name="Underweight" value="18.5" />
			
			<upperLimit id="ideal" label="BMI Ideal Max" name="Ideal" value="24.9" />
			<lowerLimit id="ideal" label="BMI Ideal Min" name="Ideal" value="18.5" />
			
			<upperLimit id="overweight" label="Over Weight Max" name="Overweight" value="29.9" />
			<lowerLimit id="overweight" label="Over Weight Min" name="Overweight" value="25" />

		</range>
		<query>
			<!-- Indicator SQL Query here -->
			
			SELECT 
	
				IF( COUNT(fin.patient) > 0, 
						ROUND( SUM( IF( fin.bmi &lt;= ${lowerLimit.bmi} AND fin.bmi > 0, 1, 0 ) ) / COUNT(fin.patient) * 100, 1)
				,0 ) AS '% Under Weight',
			
				IF( COUNT(fin.patient) > 0, 
						ROUND( SUM( IF( fin.bmi BETWEEN ${lowerLimit.ideal} AND ${upperLimit.ideal}, 1, 0 ) ) / COUNT(fin.patient) * 100, 1)
				,0 ) AS '% Ideal Weight',
			
				IF( COUNT(fin.patient) > 0, 
						ROUND( SUM( IF( fin.bmi BETWEEN ${lowerLimit.overweight} AND ${upperLimit.overweight}, 1, 0 ) ) / COUNT(fin.patient) * 100, 1)
				,0 ) AS '% Over Weight',
			
				IF( COUNT(fin.patient) > 0, 
						ROUND( SUM( IF( fin.bmi >= ${upperLimit.bmi}, 1, 0 ) ) / COUNT(fin.patient) * 100, 1)
				,0 ) AS '% Obese',
			
				IF( COUNT(fin.patient) > 0, 
						ROUND( SUM( IF( fin.bmi = 0, 1, 0 ) ) / COUNT(fin.patient) * 100, 1)
				,0 ) AS 'BMI Not Recorded'
			
			FROM (
			
				SELECT 
			
					d.demographic_no AS patient,
					IFNULL( BMI.dataField, 0) AS bmi
			
				FROM demographic d 
			
				-- BMI Screening
				-- Look for BMI index of 30 or more
				LEFT JOIN ( 
					SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved
					FROM measurements m1
					INNER JOIN (
						-- assuming that the most recent BMI measurement will have the highest ID
						SELECT MAX(id) AS id 
						FROM measurements
						WHERE type LIKE ${bmi}
						AND demographicNo > 0 
						GROUP BY demographicNo
					) m2
					ON(m1.id = m2.id)
				) BMI 
				ON (d.demographic_no = BMI.demographicNo)
			
				-- get the heights so that they can be filtered out.
				LEFT JOIN ( 
					SELECT ROUND( AVG(dataField), 1) AS dataField, demographicNo
					FROM measurements
					WHERE type LIKE ${height}
					AND demographicNo > 0 
					GROUP BY demographicNo
				) HT 
				ON (d.demographic_no = HT.demographicNo)
			
				-- exclude any patient that is pregnant
				LEFT JOIN (
					SELECT demographicNo, `status`, startDate
					FROM Episode
					WHERE DATE(startDate) > ${lowerLimit.date}
					GROUP BY demographicNo HAVING COUNT(demographicNo) > -1
				) PREG
				ON(PREG.demographicNo = d.demographic_no)
			
				WHERE d.patient_status LIKE ${pstatus} 
				AND d.demographic_no > 0 
				AND provider_no LIKE ${provider}
				AND ( PREG.`status` NOT LIKE 'Current' 
					OR PREG.`status` IS NULL )
				AND ( HT.dataField IS NULL 
					OR HT.dataField = "" 
					OR ( HT.dataField BETWEEN ${lowerLimit.height} AND ${upperLimit.height} ) )
				AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), 
					NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )
				GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1
			) fin
		</query>
	</indicatorQuery>
	<drillDownQuery>
		<version>10-07-2016</version>
		<params>
			<parameter id="provider" name="provider_no" value="loggedInProvider" />
			<parameter id="pstatus" name="Patient Status" value="'%AC%'" />
			<parameter id="bmi" name="BMI" value="'BMI'" />
			<parameter id="height" name="Height" value="'HT'" />		
		</params>
		<range>

			<lowerLimit id="age" label="Min Age" name="Age" value="18" />
			
			<upperLimit id="date" label="Current Date" name="CurrentDate" value="NOW()" />			
			<lowerLimit id="date" label="Pregnancy Episode Date" name="Date36" value="DATE_SUB( NOW(), INTERVAL 9 MONTH )" />
			
			<upperLimit id="height" label="Max Height (cm)" name="Height" value="210.8" />
			<lowerLimit id="height" label="Min Height (cm)" name="Height" value="91.4" />

		</range>
		<displayColumns>
			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />
			<column id="name" name="CONCAT( d.last_name, ', ', d.first_name )" title="Patient Name" primary="false" />
			<column id="dob" name="DATE_FORMAT( CONCAT( d.month_of_birth, '-', d.date_of_birth, '-', d.year_of_birth ), '%m-%d-%Y' )" title="Date of Birth (mm-dd-yy)" primary="false" />
			<column id="age" name="ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,'-',d.month_of_birth,'-',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Age" primary="false" />
			
			<column id="bmi" name="IFNULL( BMI.dataField, 0)" title="BMI" primary="false" />
			<column id="bmiDate" name="IFNULL( DATE_FORMAT( BMI.dateObserved, '%m-%d-%Y' ), 0)" title="Last BMI (mm-dd-yyyy)" primary="false" />
			<column id="height" name="IFNULL(HT.dataField, 0)" title="Height" primary="false" />
			
		</displayColumns>
		<exportColumns>
			<column id="demographic" name="d.demographic_no" title="Patient Id" primary="true" />
			<column id="firstName" name="d.first_name" title="First Name" primary="false" />
			<column id="lastName" name="d.last_name" title="Last Name" primary="false" />
			<column id="dob" name="DATE_FORMAT( CONCAT( d.month_of_birth, '-', d.date_of_birth, '-', d.year_of_birth ), '%m-%d-%Y' )" title="Date of Birth (mm-dd-yy)" primary="false" />
			<column id="age" name="ROUND( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,'-',d.month_of_birth,'-',d.date_of_birth) ), NOW() ) ) / 365.25 )" title="Age" primary="false" />
			
			<column id="bmi" name="IFNULL( BMI.dataField, 0)" title="BMI" primary="false" />
			<column id="bmiDate" name="IFNULL( DATE_FORMAT( BMI.dateObserved, '%m-%d-%Y' ), 0)" title="Last BMI (mm-dd-yyyy)" primary="false" />
			<column id="height" name="IFNULL(HT.dataField, 0)" title="Height" primary="false" />
		</exportColumns>
		<query>
			<!-- Drilldown SQL Query here -->
			SELECT 
			*
			FROM demographic d 
		
			-- BMI Screening
			-- Look for BMI index of 30 or more
			LEFT JOIN ( 
				SELECT m1.id, m1.dataField, m1.demographicNo, m1.dateObserved
				FROM measurements m1
				INNER JOIN (
					-- assuming that the most recent BMI measurement will have the highest ID
					SELECT MAX(id) AS id 
					FROM measurements
					WHERE type LIKE ${bmi}
					AND demographicNo > 0 
					GROUP BY demographicNo
				) m2
				ON(m1.id = m2.id)
			) BMI 
			ON (d.demographic_no = BMI.demographicNo)
		
			-- get the heights so that they can be filtered out.
			LEFT JOIN ( 
				SELECT ROUND( AVG(dataField), 1) AS dataField, demographicNo
				FROM measurements
				WHERE type LIKE ${height}
				AND demographicNo > 0 
				GROUP BY demographicNo
			) HT 
			ON (d.demographic_no = HT.demographicNo)
		
			-- exclude any patient that is pregnant
			LEFT JOIN (
				SELECT demographicNo, `status`, startDate
				FROM Episode
				WHERE DATE(startDate) > ${lowerLimit.date}
				GROUP BY demographicNo HAVING COUNT(demographicNo) > -1
			) PREG
			ON(PREG.demographicNo = d.demographic_no)
		
			WHERE d.patient_status LIKE ${pstatus} 
			AND d.demographic_no > 0 
			AND provider_no LIKE ${provider}
			AND ( PREG.`status` NOT LIKE 'Current' 
				OR PREG.`status` IS NULL )
			AND ( FLOOR( ABS( DATEDIFF( DATE( CONCAT(d.year_of_birth,"-",d.month_of_birth,"-",d.date_of_birth) ), 
				NOW() ) ) / 365.25 ) >= ${lowerLimit.age} )
			GROUP BY d.demographic_no HAVING COUNT(d.demographic_no) > -1	
		</query>
	</drillDownQuery>
</indicatorTemplateXML>